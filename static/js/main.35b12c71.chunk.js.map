{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/input/input.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","warning","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAYeA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCIfC,MARd,SAAkBR,GAEf,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCK7CO,G,MATS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACxB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCJOG,E,kDAEnB,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,GACZC,QAAQ,IALC,E,qDAUf,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAAChB,SAASe,S,oBAMrC,WAAU,IAAD,OACR,EAA8BE,KAAKT,MAA5BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXS,EAAiBlB,EAASmB,QAAO,SAAAzB,GAAO,OAAEA,EAAQG,KAAKuB,cAAcC,SAASZ,EAAYW,kBAG/F,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,iCAAQ,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAkB,GAAI,EAAKN,SAAS,CAACP,YAAYa,EAAEC,OAAOC,aACvG,cAAC,EAAD,CAAUxB,SAAUkB,IACpB,4BAAID,KAAKT,MAAME,iB,GA/BUe,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.35b12c71.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css';\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from '../card/card.component';\r\n function CardList(props){\r\n\r\n    return(\r\n        <div className=\"card-list\">\r\n           {props.monsters.map(monster=>(<Card key={monster.id} monster={monster}/>))}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList","import './search-box.styles.css';\r\nimport React from 'react'\r\n\r\nexport  const SearchBox=({placeholder, handleChange})=>(\r\n<input\r\n    className=\"search\"\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange} \r\n/>\r\n)\r\n\r\nexport default SearchBox\r\n\r\n","import React, { Component } from 'react';\nimport './App.css'\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/input/input.component';\nexport default class App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:'',\n      warning:''\n    }\n    \n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=>response.json())\n  .then(users=>this.setState({monsters:users}))\n\n  \n}\n\n\n  render() {\n   const {monsters, searchField}=this.state;\n   const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n \n  \n    return (\n      <div className=\"App\">\n        <h1>Monsters Roldex</h1>\n        <center><SearchBox placeholder='Search monsters' handleChange={e=>{this.setState({searchField:e.target.value})}}/></center>\n        <CardList monsters={filteredMonsters}/>\n        <p>{this.state.warning}</p>\n     </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}